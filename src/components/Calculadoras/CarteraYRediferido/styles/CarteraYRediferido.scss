@use '@styles/variables' as *;

.carterarediferido {
    width: 100%;
    height: 100%;
    padding: 1rem 0 4.6rem 0;
    align-content: center;
    background-color: light-dark(rgba($b-color, 0), rgba($b-color, 0.4));
    overflow-y: auto;
    scrollbar-color: light-dark($p-color, $p2-color) light-dark($w-color, $w-color);
    scrollbar-width: thin;
    scrollbar-gutter: stable;
    &__title {
        width: 100%;
        margin-bottom: 16px;
        color: white;
        font-weight: 800;
        font-size: 2.5rem;
        text-align: center;
        text-shadow: 2px 2px 2px black;
    }

    &__container {
        position: relative;
        width: 70%;
        margin: 0 auto;
        padding: 2rem;
        background-color: light-dark($p-color, $p2-color);
        border-radius: 20% 20% 20% 20% / 20% 20% 20% 20%;
        box-shadow: 2px 2px 2px #242424;
        border-bottom: 8px groove white;
    }
    &__animation {
        position: absolute;
        width: 96%;
        height: 95%;
        border-radius: 20% 20% 20% 20% / 20% 20% 20% 20%;
        overflow: hidden;
        z-index: 1;
        opacity: 0.1;
        background-color: $p-color;
    }

    &__form {
        width: 100%;
        height: 100%;
        position: relative;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-content: center;
        align-items: center;
        gap: 40px;
        z-index: 2;
    }
    &__input {
        position: relative;
        width: 200px;
        margin: 55px 4px 32px;
        font-family: monospace;
        display: flex;
        flex-direction: column-reverse;
        gap: 8px;
        & input {
            width: 100%;
            padding: 4px 16px;
            border-radius: 3px;
            background-color: white;
            color: #242424;
            font-size: 1.8rem;
            box-shadow: 2px 2px 0 light-dark($b-color, $b-color), 5px 5px 0 light-dark($w-color, $s2-color);
            outline: none;
            cursor: text;
            
            &:focus {
                box-shadow: 8px 8px 0 light-dark($b-color, $p2-color), 13px 13px 0 light-dark($w-color, $s2-color);
            }
            &:active {
                box-shadow: 8px 8px 0 light-dark($b-color, $p2-color), 13px 13px 0 light-dark($w-color, $s2-color);
            }
        }
        &.active {
            & input {
                box-shadow: 8px 8px 0 light-dark($b-color, $p2-color), 13px 13px 0 light-dark($w-color, $s2-color);
            }
            & label {
                background-color: light-dark($b-color, rgba($w-color, 1));
                color: light-dark($w-color, $p2-color);
                transform: rotate(0deg) scale(1);
            }
            & select {
                box-shadow: 8px 8px 0 light-dark($b-color, $p2-color), 13px 13px 0 light-dark($w-color, $s2-color);
            }
        }
        &:hover input{
            box-shadow: 8px 8px 0 light-dark($b-color, black), 13px 13px 0 light-dark($w-color, $s2-color);
        }
        &:hover label{
            background-color: light-dark($b-color, $w-color);
            color: light-dark($w-color, $b-color);
            transform: rotate(0deg) scale(1);
        }
        & label {
            padding: 4px 8px;
            color: light-dark(rgb(240, 240, 240), rgb(0, 0, 0));
            font-size: 1.7rem;
            font-weight: 800;
            background-color: light-dark(rgba($b-color, 0.8), rgba($w-color, 0.8));
            position: absolute;
            top: -45px;
           
            cursor: pointer;
            transform: rotate(-5deg) scale(0.9);
        }
        & select {
            width: 100%;
            padding: 4px 16px;
            border-radius: 3px;
            background-color: white;
            color: #242424;
            font-size: 1.8rem;
            box-shadow: 2px 2px 0 light-dark($b-color, $b-color), 5px 5px 0 light-dark($w-color, $s2-color);
            outline: none;
            cursor: pointer;
            
            &:focus {
                box-shadow: 8px 8px 0 light-dark($b-color, $p2-color), 13px 13px 0 light-dark($w-color, $s2-color);
            }
        }

        &:hover select {
            box-shadow: 8px 8px 0 light-dark($b-color, black), 13px 13px 0 light-dark($w-color, $s2-color);
            
        }
        

        & input[type="date"] {
            position: relative;
            background-color: #f8f8f8;
            border: 1px solid $p-color;
            border-radius: 5px;
            color: black;
            font-weight: 800;
            font-size: 18px;
            text-align: center;
            padding: 2px 4px;
            
            // &::-webkit-datetime-edit { padding: 1rem; }
            
            &::-webkit-datetime-edit-text { padding: 0 0.3em; }
            // &::-webkit-datetime-edit-month-field { color: rgba(255, 0, 13, 0.13); }
            // &::-webkit-datetime-edit-day-field { color: green; }
            // &::-webkit-datetime-edit-year-field { color: purple; }
            &::-webkit-calendar-picker-indicator {
                background: transparent;
                color: transparent;
                cursor: pointer;
                height: auto;
                left: 0;
                position: absolute;
                right: 0;
                top: 0;
                bottom: 0;
                width: auto;
            }
            &:hover {
                background-color: $b-color;
                color: white;
            }
            &:focus {
                background-color: $p2-color;
                color: white;
            }
        }
        

    }
    
    &__button {
        width: 150px;
        position: absolute;
        bottom: -35px;
        background-color: light-dark($w-color, $b-color);
        border-radius: 10px;
        box-shadow: 2px 2px 4px light-dark(#242424, #cccccc);
        color: light-dark($b-color, $w-color);
        font-size: 1.4rem;
        font-weight: 800;
        &--calculate {
            left: 5%;
            
        }
        &--reset {
            right: 5%;
        }
        & button {
            width: 100%;
            height: 100%;
            padding: 8px 16px;
            display: flex;
            justify-content: space-evenly;
            align-items: center;
            cursor: pointer;
            & span {
                
                font-size: 1.4rem;
                border-bottom: 1px solid light-dark($b-color, $w-color);
            }
            & p {
                color: light-dark($b-color, $w-color);
                padding: 4px 8px;
                border: 2px groove light-dark($b-color, $w-color);
                box-shadow:  1px 1px 1px light-dark(#79797983, #cccccc);
                border-radius: 5px;
                font-size: 1.2rem;
            }
        }
        &:hover {
            background-color: light-dark($b-color, $w-color);
            color: light-dark($w-color, $b-color);
        }
        &:hover button  span{
            color: light-dark($w-color, $b-color);
            border-bottom: 1px solid light-dark($w-color, $b-color);
        }
        &:hover button p {
            color: light-dark($w-color, $b-color);
            border: 2px groove light-dark($w-color, $b-color);
        }

    }
}









///animacion de fondo 


:root {
    /* var increments */
    --r-increment: -10;
    --g-increment: 5;
    --b-increment: 13.5;
    --o-increment: -0.025;
    --size-increment: 30px;
    --delay-increment: 0.1s;
    --border-increment: 1px;
  
    /* first ring's values. offset by 1x increment to compensate for index starting at i=1 */
    --r-start: calc(255 - var(--r-increment));
    --g-start: calc(255 - var(--g-increment));
    --b-start: calc(255 - var(--b-increment));
    --o-start: calc(0.5 - var(--o-increment));
    --size-start: calc(490px - var(--size-increment));
    --delay-start: calc(0s - var(--delay-increment));
    --border-start: calc(1px - var(--border-increment));
  }
  
  
  .wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    perspective: 800px;
    overflow: hidden;
  }

  aside {
    transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg);
  
    position: absolute;
    border: 4px solid #0000;
    border-radius: 50%;
  
    animation: tumble 55s linear infinite;
  
    /* animation: ripple2 1s linear infinite; */
    animation-composition: add;
  }
  
  aside.ring {
    --i: 0; /* only change this. */
  
    /* written for universality. */
    /* each ring uses this ruleset. Just change --i in each individual ring, and all  properties will be set according to the rules in :root{} */
    --r: calc(var(--r-start) + calc(var(--r-increment) * var(--i)));
    --g: calc(var(--g-start) + calc(var(--g-increment) * var(--i)));
    --b: calc(var(--b-start) + calc(var(--b-increment) * var(--i)));
    --o: calc(var(--o-start) + calc(var(--o-increment) * var(--i)));
    color: rgba(var(--r), var(--g), var(--b), var(--o));
    /* background-color: rgba(var(--r), var(--g), var(--b), var(--o)); */
    border-color: rgba(var(--r), var(--g), var(--b), var(--o));
  
    --size: calc(var(--size-start) + calc(var(--size-increment) * var(--i)));
    width: var(--size);
    height: var(--size);
    --delay: calc(var(--delay-start) + calc(var(--delay-increment) * var(--i)));
    animation-delay: var(--delay);
    --border: calc(var(--border-start) + calc(var(--border-increment) * var(--i)));
    border-width: var(--border);
    /* ##### */
  }
  
  aside:nth-of-type(1).ring {
    --i: 1; /* only change this. */
  }
  aside:nth-of-type(2).ring {
    --i: 2; /* only change this. */
  }
  aside:nth-of-type(3).ring {
    --i: 3; /* only change this. */
  }
  aside:nth-of-type(4).ring {
    --i: 4; /* only change this. */
  }
  aside:nth-of-type(5).ring {
    --i: 5; /* only change this. */
  }
  aside:nth-of-type(6).ring {
    --i: 6; /* only change this. */
  }
  aside:nth-of-type(7).ring {
    --i: 7; /* only change this. */
  }
  aside:nth-of-type(8).ring {
    --i: 8; /* only change this. */
  }
  aside:nth-of-type(9).ring {
    --i: 9; /* only change this. */
  }
  aside:nth-of-type(10).ring {
    --i: 10; /* only change this. */
  }
  aside:nth-of-type(11).ring {
    --i: 11; /* only change this. */
  }
  aside:nth-of-type(12).ring {
    --i: 12; /* only change this. */
  }
  aside:nth-of-type(13).ring {
    --i: 13; /* only change this. */
  }
  aside:nth-of-type(14).ring {
    --i: 14; /* only change this. */
  }
  aside:nth-of-type(15).ring {
    --i: 15; /* only change this. */
  }
  aside:nth-of-type(16).ring {
    --i: 16; /* only change this. */
  }
  aside:nth-of-type(17).ring {
    --i: 17; /* only change this. */
  }
  aside:nth-of-type(18).ring {
    --i: 18; /* only change this. */
  }
  aside:nth-of-type(19).ring {
    --i: 19; /* only change this. */
  }
  aside:nth-of-type(20).ring {
    --i: 20; /* only change this. */
  }
  
  @keyframes rotate {
    0% {
      transform: unset;
    }
    100% {
      transform: rotateY(360deg);
    }
  }
  
  @keyframes tumble {
    0% {
    }
    100% {
      transform: rotateX(1800deg) rotateY(1440deg) rotateZ(1080deg);
    }
  }
  
  @keyframes ripple {
    0% {
      transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg);
    }
    50% {
      transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg) translateZ(100px);
    }
    100% {
      transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg);
    }
  }
  
  @keyframes ripple2 {
    0% {
      transform: translateZ(0px);
    }
    25% {
      transform: translateZ(-100px);
    }
    50% {
      transform: translateZ(0px);
    }
    75% {
      transform: translateZ(100px);
    }
    100% {
      transform: translateZ(0px);
    }
  }

/// 